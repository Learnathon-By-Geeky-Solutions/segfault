services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend/codesirius:/app/codesirius
    working_dir: /app/codesirius
    command: >
      sh -c "mkdir -p /app/codesirius/logs && python manage.py runserver 0.0.0.0:8000"

    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:14.15-alpine3.21
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5



  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        - DEV=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules # to avoid overwriting node_modules
      - /app/.next  # to avoid overwriting .next
    working_dir: /app
    command: >
      sh -c  "npm run dev"

volumes:
  postgres_data:
      
