services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend/codesirius:/app/codesirius
    working_dir: /app/codesirius
    command: >
      sh -c "mkdir -p /app/codesirius/logs && python manage.py runserver 0.0.0.0:8000"

    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:14.15-alpine3.21
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5



  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        - DEV=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules # to avoid overwriting node_modules
      - /app/.next  # to avoid overwriting .next
    working_dir: /app
    command: >
      sh -c  "npm run dev"
      

  nginx:
    image: nginx:1.21.3-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3001:3000"  # Grafana UI on port 3001 (default is 3000, but you can change it)
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"  # Set an admin password (default is 'admin')
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped


  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/config:/etc/loki/config
      - ./loki/data:/loki
    command: -config.file=/etc/loki/config/loki-config.yml
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3100/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/config:/etc/promtail
      - ./backend/codesirius/logs:/logs
    command: -config.file=/etc/promtail/promtail.yml
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/config:/etc/prometheus
    ports:
      - "9090:9090"
    command: --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  grafana_data:
